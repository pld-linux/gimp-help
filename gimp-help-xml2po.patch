From 7d8785e3a3278f3af101848bbfcb41c04a296a6c Mon Sep 17 00:00:00 2001
From: Ulf-D. Ehlert <ulfehlert@svn.gnome.org>
Date: Wed, 06 Feb 2013 19:08:53 +0000
Subject: [make] Fix xml2po.py to use xml2po modes correctly

This should make xml2po.py work without installed xml2po package
(by mistake xml2po.py used some standard mode files instead of our
mode files under tools/xml2po/modes/).
These changes may be related to bug #692946 and thus fix it
(we'll see...).
---
diff --git a/tools/xml2po.py b/tools/xml2po.py
index 18a899b..57904ea 100755
--- a/tools/xml2po.py
+++ b/tools/xml2po.py
@@ -81,8 +81,7 @@ def main(argv):
         sys.exit(2)
 
     name = os.path.join(os.path.dirname(__file__), '..')
-    if os.path.exists(os.path.join(name, 'tests')):
-        print >> sys.stderr, 'Running from source folder, modifying PYTHONPATH'
+    if not name in sys.path:
         sys.path.insert(0, name)
 
     from xml2po import Main
diff --git a/tools/xml2po/modes/__init__.py b/tools/xml2po/modes/__init__.py
index e2ef7a4..e69de29 100644
--- a/tools/xml2po/modes/__init__.py
+++ b/tools/xml2po/modes/__init__.py
@@ -1,80 +0,0 @@
-# Copyright (c) 2004, 2005, 2006 Danilo Segan <danilo@gnome.org>.
-#
-# This file is part of xml2po.
-#
-# xml2po is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# xml2po is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with xml2po; if not, write to the Free Software Foundation, Inc.,
-# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-#
-
-# Basic default class; inherit from it to construct other special-handling classes
-#
-
-class basicXmlMode:
-    """Abstract class for special handling of document types."""
-    def getIgnoredTags(self):
-        "Returns array of tags to be ignored."
-        return ['itemizedlist', 'orderedlist', 'variablelist', 'varlistentry']
-
-    def getFinalTags(self):
-        "Returns array of tags to be considered 'final'."
-        return ['para', 'title', 'releaseinfo', 'revnumber',
-                'date', 'itemizedlist', 'orderedlist',
-                'variablelist', 'varlistentry', 'term']
-
-    def isFinalNode(self, node):
-        #node.type =='text' or not node.children or
-        if node.type == 'element' and node.name in self.getFinalTags():
-            return True
-        elif node.children:
-            final_children = True
-            child = node.children
-            while child and final_children:
-                if not child.isBlankNode() and child.type != 'comment' and not self.isFinalNode(child):
-                    final_children = False
-                child = child.next
-            if final_children:
-                return True
-        return False
-
-    def getSpacePreserveTags(self):
-        "Returns array of tags in which spaces are to be preserved."
-        return []
-
-    def getTreatedAttributes(self):
-        "Returns array of tag attributes which content is to be translated"
-        return []
-
-    def preProcessXml(self, doc, msg):
-        "Preprocess a document and perhaps adds some messages."
-        pass
-
-    def postProcessXmlTranslation(self, doc, language, translators):
-        """Sets a language and translators in "doc" tree.
-
-        "translators" is a string consisted of translator credits.
-        "language" is a simple string.
-        "doc" is a libxml2.xmlDoc instance."""
-        pass
-
-    def getStringForTranslators(self):
-        """Returns None or a string to be added to PO files.
-
-        Common example is 'translator-credits'."""
-        return None
-
-    def getCommentForTranslators(self):
-        """Returns a comment to be added next to string for crediting translators.
-
-        It should explain the format of the string provided by getStringForTranslators()."""
-        return None
diff --git a/tools/xml2po/modes/basic.py b/tools/xml2po/modes/basic.py
new file mode 100644
index 0000000..e2ef7a4
--- /dev/null
+++ b/tools/xml2po/modes/basic.py
@@ -0,0 +1,80 @@
+# Copyright (c) 2004, 2005, 2006 Danilo Segan <danilo@gnome.org>.
+#
+# This file is part of xml2po.
+#
+# xml2po is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# xml2po is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with xml2po; if not, write to the Free Software Foundation, Inc.,
+# 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+# Basic default class; inherit from it to construct other special-handling classes
+#
+
+class basicXmlMode:
+    """Abstract class for special handling of document types."""
+    def getIgnoredTags(self):
+        "Returns array of tags to be ignored."
+        return ['itemizedlist', 'orderedlist', 'variablelist', 'varlistentry']
+
+    def getFinalTags(self):
+        "Returns array of tags to be considered 'final'."
+        return ['para', 'title', 'releaseinfo', 'revnumber',
+                'date', 'itemizedlist', 'orderedlist',
+                'variablelist', 'varlistentry', 'term']
+
+    def isFinalNode(self, node):
+        #node.type =='text' or not node.children or
+        if node.type == 'element' and node.name in self.getFinalTags():
+            return True
+        elif node.children:
+            final_children = True
+            child = node.children
+            while child and final_children:
+                if not child.isBlankNode() and child.type != 'comment' and not self.isFinalNode(child):
+                    final_children = False
+                child = child.next
+            if final_children:
+                return True
+        return False
+
+    def getSpacePreserveTags(self):
+        "Returns array of tags in which spaces are to be preserved."
+        return []
+
+    def getTreatedAttributes(self):
+        "Returns array of tag attributes which content is to be translated"
+        return []
+
+    def preProcessXml(self, doc, msg):
+        "Preprocess a document and perhaps adds some messages."
+        pass
+
+    def postProcessXmlTranslation(self, doc, language, translators):
+        """Sets a language and translators in "doc" tree.
+
+        "translators" is a string consisted of translator credits.
+        "language" is a simple string.
+        "doc" is a libxml2.xmlDoc instance."""
+        pass
+
+    def getStringForTranslators(self):
+        """Returns None or a string to be added to PO files.
+
+        Common example is 'translator-credits'."""
+        return None
+
+    def getCommentForTranslators(self):
+        """Returns a comment to be added next to string for crediting translators.
+
+        It should explain the format of the string provided by getStringForTranslators()."""
+        return None
diff --git a/tools/xml2po/modes/docbook.py b/tools/xml2po/modes/docbook.py
index b98916b..276a9d9 100644
--- a/tools/xml2po/modes/docbook.py
+++ b/tools/xml2po/modes/docbook.py
@@ -43,7 +43,7 @@ try:
 except ImportError:
     from md5 import new as md5_new
 
-from xml2po.modes import basicXmlMode
+from basic import basicXmlMode
 
 class docbookXmlMode(basicXmlMode):
     """Class for special handling of DocBook document types.
--
cgit v0.9.2
